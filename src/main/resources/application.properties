
server.port=82

### Mybatis 연결 설정
# USER 정보 기입
spring.datasource.hikari.username=user01
#password
spring.datasource.hikari.password=user01
#URL=jdbc:mariadb:IP:PORT/데이터베이스명
#spring.datasource.url=jdbc:mariadb://15.164.171.101:3306/USER01
#Driver
#spring.datasource.dbcp2.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.url=jdbc:log4jdbc:mariadb://15.164.171.101:3306/USER01

###SQL LOG 설정
log4jdbc.spylogdelegator.name=net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator
log4jdbc.dump.sql.maxlinelength=0

logging.level.jdbc=OFF
# SQL문만 로깅할지 여부, PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문을 출력
logging.level.jdbc.sqlonly=OFF
#SQL문과 해당 SQL을 실행한 시간 정보(milliseconds)를 포함
logging.level.jdbc.sqltiming=DEBUG
# ResultSet을 제외한 모든 JDBC 호출 정보를 출력, 로그 양이 많아서 특별한 문제가 아니면 사용을 권장하지 않음
logging.level.jdbc.audit=OFF
#ResultSet을 포함한 모든 JDBC 호출 정보를 출력 매우, 방대한 양의 로그가 생성
logging.level.jdbc.resultset=OFF
#SQL 조회된 결과 데이터를 table형식의 로그로 출력
logging.level.jdbc.resultsettable=INFO
#connection open close 로깅 여부 
logging.level.jdbc.connection=OFF
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.com.zaxxer.hikari=OFF
logging.level.javax.sql.DataSource=INFO

# Mapper 위치 알려주는 코드
mybatis.mapper-locations=classpath:database/mappers/*Mapper.xml

# Config 위치 알려주는 코드
mybatis.config-location=classpath:database/config/config.xml

###JSP
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

## 전역 레벨 설정 (기본레벨은 info이다.)
logging.level.root=info

## WEB 요청 발생 시 로그 기록을 통해 파라미터를 출력함
## 파라미터 종류나 값이 클 경우 생략될 수도 있다. (로그기록에 출력안될 수 있음)
logging.level.org.springframework.web=trace

##request 요청할 때 details log찍는 것을 실행하겠다.
spring.mvc.log-request-details=true

#Security 비활성화:로그인창 거치지않고 바로 데이터 출력위함
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
