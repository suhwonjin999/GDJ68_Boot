
server.port=82

### Mybatis 연결 설정
# USER 정보 기입
spring.datasource.hikari.username=user01
#password
spring.datasource.hikari.password=user01
#URL=jdbc:mariadb:IP:PORT/데이터베이스명
#spring.datasource.url=jdbc:mariadb://15.164.171.101:3306/USER01
#Driver
#spring.datasource.dbcp2.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.url=jdbc:log4jdbc:mariadb://52.79.233.227:3306/USER01

###SQL LOG 설정
log4jdbc.spylogdelegator.name=net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator
log4jdbc.dump.sql.maxlinelength=0

logging.level.jdbc=OFF
# SQL문만 로깅할지 여부, PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문을 출력
logging.level.jdbc.sqlonly=OFF
#SQL문과 해당 SQL을 실행한 시간 정보(milliseconds)를 포함
logging.level.jdbc.sqltiming=DEBUG
# ResultSet을 제외한 모든 JDBC 호출 정보를 출력, 로그 양이 많아서 특별한 문제가 아니면 사용을 권장하지 않음
logging.level.jdbc.audit=OFF
#ResultSet을 포함한 모든 JDBC 호출 정보를 출력 매우, 방대한 양의 로그가 생성
logging.level.jdbc.resultset=OFF
#SQL 조회된 결과 데이터를 table형식의 로그로 출력
logging.level.jdbc.resultsettable=INFO
#connection open close 로깅 여부 
logging.level.jdbc.connection=OFF
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.com.zaxxer.hikari=OFF
logging.level.javax.sql.DataSource=INFO

# Mapper 위치 알려주는 코드
mybatis.mapper-locations=classpath:database/mappers/*Mapper.xml

# Config 위치 알려주는 코드
mybatis.config-location=classpath:database/config/config.xml

###JSP
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

# Multipart 사용 여부
spring.servlet.multipart.enabled=true

# 파일 하나 당 최대 사이즈
spring.servlet.multipart.max-file-size=10MB

# 총 파일 최대 사이즈
spring.servlet.multipart.max-request-size=50MB

### Upload 경로: Base 경로 (이런 키는 propertice 파일에 등록되어 있는 예약어가 없지만 쓸 수 있다.)
app.upload=D:///GDJ68/upload/

## notice upload 경로
app.board.notice=notice

## qna upload 경로
app.board.qn=qna

## 파일 요청 URL : ROOT 밑에 files 으로 시작하는 모든 URL은 컨트롤러로 가지말고 서버에 있는 폴더로 바로 가기 지정함
app.url.path=/files/**

## 파일 매핑 Base 경로 : Window OS인 경우, ROOT를 찾지못하기 때문에 경로를 따로 적어줘야 함.
app.upload.mapping=file:///D:///GDJ68/upload/

## 전역 레벨 설정 (기본레벨은 info이다.)
logging.level.root=info

## WEB 요청 발생 시 로그 기록을 통해 파라미터를 출력함
## 파라미터 종류나 값이 클 경우 생략될 수도 있다. (로그기록에 출력안될 수 있음)
logging.level.org.springframework.web=trace

##request 요청할 때 details log찍는 것을 실행하겠다.
spring.mvc.log-request-details=true

## Message 설정
# message 파일의 위치를 알려주겠다
# 기본이름 : messages라는 폴더 밑에 message으로 시작하는 파일 (폴더명/파일명)
spring.messages.basename=messages/message

# Encoding 설정
spring.messages.encoding=UTF-8

# message key가 존재하지 않는 경우, 예외 오류를 발생시키지 않고 key 코드를 그대로 출력되게 설정함. 
spring.messages.use-code-as-default-message=true
### true  : 예외를 발생 시키지 않고 key를 출력
### false : 예외를 발생

# message 파일 내용의 변경을 감지하는 간격(초단위)
# 600초 뒤에 messages properties 내용이 변경되었나 확인
spring.messages.cache-duration=600


#Security 비활성화:로그인창 거치지않고 바로 데이터 출력위함
#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration

## SocialLogin kakao
spring.security.oauth2.client.registration.kakao.client-id=92ff3be8ec31c8b47bc286855271402d

# Secret Key(Admin Key)
spring.security.oauth2.client.registration.kakao.client-secret=9386ac4a3abf0754fcc97af32dfbe7ae

# 카카오 로그인 Redirect URL
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost/login/oauth2/code/kakao

# 고정값
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code

# 회원가입시 추가로 가져 오는 유저 정보 항목
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email,birthday

# Social Login 업체 명
spring.security.oauth2.client.registration.kakao.client-name=Kakao

# 인증 요청시 메서드 형식
spring.security.oauth2.client.registration.kakao.client-authentication-method=POST

#Provider 세팅
#서버의 IP 주소 입력
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
#토큰받기 위한 IP 주소 입력
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token

spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me

spring.security.oauth2.client.provider.kakao.user-name-attribute=id



